<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wyx.springboot.redis.cache.mapper.ConfigMapper" >
  <resultMap id="BaseResultMap" type="com.wyx.springboot.redis.cache.entity.Config" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="keywork" property="keywork" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="create_name" property="createName" jdbcType="VARCHAR" />
    <result column="modify_name" property="modifyName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, keywork, value, create_name, modify_name, create_time, modify_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from config
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getBykeywork" resultMap="BaseResultMap" parameterType="string">
    SELECT
        <include refid="Base_Column_List" />
    FROM
        config
    WHERE
        keywork = #{keywork,jdbcType=VARCHAR}
  </select>


  <insert id="insert" parameterType="com.wyx.springboot.redis.cache.entity.Config" >
    insert into config (id, keywork, value,
      create_name, modify_name, create_time,
      modify_time)
    values (#{id,jdbcType=INTEGER}, #{keywork,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR},
      #{createName,jdbcType=VARCHAR}, #{modifyName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.wyx.springboot.redis.cache.entity.Config" >
    insert into config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="keywork != null" >
        keywork,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="createName != null" >
        create_name,
      </if>
      <if test="modifyName != null" >
        modify_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="keywork != null" >
        #{keywork,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="createName != null" >
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="modifyName != null" >
        #{modifyName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wyx.springboot.redis.cache.entity.Config" >
    update config
    <set >
      <if test="keywork != null" >
        keywork = #{keywork,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="createName != null" >
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="modifyName != null" >
        modify_name = #{modifyName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wyx.springboot.redis.cache.entity.Config" >
    update config
    set keywork = #{keywork,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      create_name = #{createName,jdbcType=VARCHAR},
      modify_name = #{modifyName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>